scale_y_continuous(breaks = c(-3, -2, -1), labels = c("–3", "–2", "–1")) +
theme_pubr()  +
theme(axis.title=element_text(size=7),
axis.line = element_line(size = 0.1),
axis.ticks = element_line(size = 0.1),
axis.text = element_text(size = 6)) +
labs(x= bquote("Observed log"~CO[2]~ 'emission rate ('*mu~'g'~ h^-1~g^-1*')') , y = bquote("Predicted log"~CO[2]~ 'emission rate ('*mu~'g'~ h^-1~g^-1*')'))
px
ggsave("figures/Observed and predicted co2 emission.png", width = 4, height = 2.5, dpi = 600)
options(repr.plot.width = 12, repr.plot.height = 6)
plot_co2 <- data_co2_clean %>%
ggplot(aes(x = `1/T`, y = lnK)) +
facet_grid(~`Depth (cm)`, labeller = labeller(`Depth (cm)` = New.labs_b)) +
geom_boxplot(aes(group = factor(`1/T`)), outlier.shape = NA) +
stat_regline_equation(aes(label =  paste(..eq.label.., ..rr.label.., sep = "~~")), label.x = 0.00331, label.y = -7) +
geom_abline(data = linmod_coef, aes(intercept = Intercept, slope = Slope), lwd = 1) +
scale_y_continuous(breaks = c(-12, -10, -8), labels = c("–12", "–10", "–8")) +
labs(x =  bquote("1/T" ~ᵒK^-1), y = bquote("Log k" ~d^-1)) +
theme_bw() +
theme(strip.text = element_text(size = 14), axis.text=element_text(size=14),
axis.title=element_text(size=14))
plot_co2
ggsave("figures/Arrhénius équation.png", plot = plot_co2, width = 8, height = 4, dpi = 600)# export plot high resolution
options(repr.plot.width = 12, repr.plot.height = 6)
plot_co2 <- data_co2_clean %>%
ggplot(aes(x = `1/T`, y = lnK)) +
facet_grid(~`Depth (cm)`, labeller = labeller(`Depth (cm)` = New.labs_b)) +
geom_boxplot(aes(group = factor(`1/T`)), outlier.shape = NA) +
stat_regline_equation(aes(label =  paste(..eq.label.., ..rr.label.., sep = "~~")), label.x = 0.00331, label.y = -7) +
geom_abline(data = linmod_coef, aes(intercept = Intercept, slope = Slope), lwd = 1) +
scale_y_continuous(breaks = c(-12, -10, -8), labels = c("–12", "–10", "–8")) +
labs(x =  bquote("1/T" ~(ᵒK^-1)), y = bquote("Log k" ~(d^-1))) +
theme_bw() +
theme(strip.text = element_text(size = 14), axis.text=element_text(size=14),
axis.title=element_text(size=14))
plot_co2
ggsave("figures/Arrhénius équation.png", plot = plot_co2, width = 8, height = 4, dpi = 600)# export plot high resolution
par(mfrow=c(2,2)) # plot all 4 plots in one
plot(model_fit$fit,
pch = 16,
col = '#006EA1')
par(mfrow=c(2,2)) # plot all 4 plots in one
plot(model_fit$fit,
pch = 10,
col = '#006EA1')
par(mfrow=c(2,2)) # plot all 4 plots in one
plot(model_fit$fit,
pch = 16,
col = '#006EA1')
par(mfrow=c(2,2)) # plot all 4 plots in one
plot(model_fit$fit,
pch = 10,
col = '#006EA1')
#par(mfrow=c(2,2)) # plot all 4 plots in one
plot(model_fit$fit,
pch = 10,
col = '#006EA1')
par(mfrow=c(1,2)) # plot all 4 plots in one
plot(model_fit$fit,
pch = 10,
col = '#006EA1')
par(mfrow=c(2,1)) # plot all 4 plots in one
plot(model_fit$fit,
pch = 10,
col = '#006EA1')
par(mfrow=c(1,2)) # plot all 4 plots in one
plot(model_fit$fit,
pch = 10,
col = '#006EA1')
?plot
par(mfrow=c(1,2)) # plot all 4 plots in one
plot(model_fit$fit,
pch = 10,
col = '#006EA1')
prediction <-  model_fit |>
predict(data_co2_preprocessed)
par(mfrow=c(1,1)) # plot all 4 plots in one
plot(model_fit$fit,
pch = 10,
col = '#006EA1')
par(mfrow=c(1,1)) # plot all 4 plots in one
plot(model_fit$fit,
pch = 10,
col = '#006EA1')
#par(mfrow=c(1,1)) # plot all 4 plots in one
plot(model_fit$fit,
pch = 10,
col = '#006EA1')
options(repr.plot.width = 8, repr.plot.height = 2)
term_rename <- tibble(term = c("`Time (days)`", "`Depth (cm)`", "
`Temperature (°C)`", "Sites_PF45"),
name_corrected = c("Elapsed time", "Layer", "Temperature", "Management"))
h <- broom::tidy(model_fit, conf.int = TRUE) |>
dplyr::filter(term != "(Intercept)") |>
left_join(term_rename, by = "term") |>
mutate(term_rename = fct_reorder(name_corrected, estimate)) |>
ggplot(aes(estimate, term_rename)) +
geom_vline(xintercept = 0, linetype = 2) +
geom_point() +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high), height = 0.1,
size=0.5) +
scale_x_continuous(breaks = c(-0.6, -0.4, -0.2, 0.0, 0.2),
labels = c("–0.6", "–0.4", "–0.2", "0.0", "0.2")) +
labs(x = "Coefficient", y = "") +
theme_light() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14)) # Time (d)
h
ggsave("figures/Linear-model-Co2_with_site.png", width = 8,
height = 2, dpi = 600)
options(repr.plot.width = 8, repr.plot.height = 2)
term_rename <- tibble(term = c("`Time (days)`", "`Depth (cm)`", "
`Temperature (°C)`", "Sites_PF45"),
name_corrected = c("Elapsed time", "Soil layer",
"Temperature", "Management"))
h <- broom::tidy(model_fit, conf.int = TRUE) |>
dplyr::filter(term != "(Intercept)") |>
left_join(term_rename, by = "term") |>
mutate(term_rename = fct_reorder(name_corrected, estimate)) |>
ggplot(aes(estimate, term_rename)) +
geom_vline(xintercept = 0, linetype = 2) +
geom_point() +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high), height = 0.1,
size=0.5) +
scale_x_continuous(breaks = c(-0.6, -0.4, -0.2, 0.0, 0.2),
labels = c("–0.6", "–0.4", "–0.2", "0.0", "0.2")) +
labs(x = "Coefficient", y = "") +
theme_light() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14)) # Time (d)
h
ggsave("figures/Linear-model-Co2_with_site.png", width = 8,
height = 2, dpi = 600)
broom::tidy(model_fit, conf.int = TRUE) |>
dplyr::filter(term != "(Intercept)") |>
left_join(term_rename, by = "term") |>
mutate(term_rename = fct_reorder(name_corrected, estimate))
broom::tidy(model_fit, conf.int = TRUE) |>
dplyr::filter(term != "(Intercept)") |>
left_join(term_rename, by = "term") |>
mutate(term_rename = fct_reorder(name_corrected, estimate)) |>
ggplot(aes(estimate, term_rename)) +
geom_vline(xintercept = 0, linetype = 2) +
geom_point()
options(repr.plot.width = 8, repr.plot.height = 2)
term_rename <- tibble(term = c("`Time (days)`", "`Depth (cm)`", "
`Temperature (°C)`", "Sites_PF45"),
name_corrected = c("Elapsed time", "Soil layer",
"Temperature", ""))
h <- broom::tidy(model_fit, conf.int = TRUE) |>
dplyr::filter(term != "(Intercept)") |>
left_join(term_rename, by = "term") |>
mutate(term_rename = fct_reorder(name_corrected, estimate)) |>
ggplot(aes(estimate, term_rename)) +
geom_vline(xintercept = 0, linetype = 2) +
geom_point() +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high), height = 0.1,
size=0.5) +
scale_x_continuous(breaks = c(-0.6, -0.4, -0.2, 0.0, 0.2),
labels = c("–0.6", "–0.4", "–0.2", "0.0", "0.2")) +
labs(x = "Coefficient", y = "") +
theme_light() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14)) # Time (d)
h
ggsave("figures/Linear-model-Co2_with_site.png", width = 8,
height = 2, dpi = 600)
options(repr.plot.width = 8, repr.plot.height = 2)
term_rename <- tibble(term = c("`Time (days)`", "`Depth (cm)`", "
`Temperature (°C)`", "Sites_PF45"),
name_corrected = c("Elapsed time", "Soil layer",
"Temperature"))
options(repr.plot.width = 8, repr.plot.height = 2)
term_rename <- tibble(term = c("`Time (days)`", "`Depth (cm)`", "
`Temperature (°C)`"),
name_corrected = c("Elapsed time", "Soil layer",
"Temperature"))
h <- broom::tidy(model_fit, conf.int = TRUE) |>
dplyr::filter(term != "(Intercept)") |>
left_join(term_rename, by = "term") |>
mutate(term_rename = fct_reorder(name_corrected, estimate)) |>
ggplot(aes(estimate, term_rename)) +
geom_vline(xintercept = 0, linetype = 2) +
geom_point() +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high), height = 0.1,
size=0.5) +
scale_x_continuous(breaks = c(-0.6, -0.4, -0.2, 0.0, 0.2),
labels = c("–0.6", "–0.4", "–0.2", "0.0", "0.2")) +
labs(x = "Coefficient", y = "") +
theme_light() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14)) # Time (d)
h
ggsave("figures/Linear-model-Co2_with_site.png", width = 8,
height = 2, dpi = 600)
options(repr.plot.width = 8, repr.plot.height = 2)
term_rename <- tibble(term = c("`Time (days)`", "`Depth (cm)`", "
`Temperature (°C)`", "Sites_PF45"),
name_corrected = c("Elapsed time", "Soil layer",
"Temperature", "Management"))
h <- broom::tidy(model_fit, conf.int = TRUE) |>
dplyr::filter(term != "(Intercept)") |>
left_join(term_rename, by = "term") |>
mutate(term_rename = fct_reorder(name_corrected, estimate)) |>
ggplot(aes(estimate, term_rename)) +
geom_vline(xintercept = 0, linetype = 2) +
geom_point() +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high), height = 0.1,
size=0.5) +
scale_x_continuous(breaks = c(-0.6, -0.4, -0.2, 0.0, 0.2),
labels = c("–0.6", "–0.4", "–0.2", "0.0", "0.2")) +
labs(x = "Coefficient", y = "") +
theme_light() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14)) # Time (d)
h
ggsave("figures/Linear-model-Co2_with_site.png", width = 8,
height = 2, dpi = 600)
broom::tidy(model_fit, conf.int = TRUE) |>
dplyr::filter(term != "(Intercept)") |>
left_join(term_rename, by = "term") |>
mutate(term_rename = fct_reorder(name_corrected, estimate))
options(repr.plot.width = 8, repr.plot.height = 2)
term_rename <- tibble(term = c("`Time (days)`", "`Depth (cm)`", "
`Temperature (°C)`", "Sites_PF45"),
name_corrected = c("Elapsed time", "Soil layer",
"Temperature", "Management"))
h <- broom::tidy(model_fit, conf.int = TRUE) |>
dplyr::filter(term != "(Intercept)") |>
left_join(term_rename, by = "term") |>
mutate(term_rename = fct_reorder(name_corrected, estimate)) |>
ggplot(aes(estimate, term_rename)) +
geom_vline(xintercept = 0, linetype = 2) +
geom_point() +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high), height = 0.1,
size=0.5) +
scale_x_continuous(breaks = c(-0.6, -0.4, -0.2, 0.0, 0.2),
labels = c("–0.6", "–0.4", "–0.2", "0.0", "0.2")) +
labs(x = "Coefficient", y = "") +
theme_light() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14)) # Time (d)
h
ggsave("figures/Linear-model-Co2_with_site.png", width = 8,
height = 2, dpi = 600)
broom::tidy(model_fit, conf.int = TRUE)
broom::tidy(model_fit, conf.int = TRUE) |>
dplyr::filter(term != "(Intercept)")
options(repr.plot.width = 8, repr.plot.height = 2)
term_rename <- tibble(term = c("`Time (days)`", "`Depth (cm)`", "
`Temperature(°C)`", "Sites_PF45"),
name_corrected = c("Elapsed time", "Soil layer",
"Temperature", "Management"))
h <- broom::tidy(model_fit, conf.int = TRUE) |>
dplyr::filter(term != "(Intercept)") |>
left_join(term_rename, by = "term") |>
mutate(term_rename = fct_reorder(name_corrected, estimate)) |>
ggplot(aes(estimate, term_rename)) +
geom_vline(xintercept = 0, linetype = 2) +
geom_point() +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high), height = 0.1,
size=0.5) +
scale_x_continuous(breaks = c(-0.6, -0.4, -0.2, 0.0, 0.2),
labels = c("–0.6", "–0.4", "–0.2", "0.0", "0.2")) +
labs(x = "Coefficient", y = "") +
theme_light() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14)) # Time (d)
h
ggsave("figures/Linear-model-Co2_with_site.png", width = 8,
height = 2, dpi = 600)
options(repr.plot.width = 8, repr.plot.height = 2)
term_rename <- tibble(term = c("`Time (days)`", "`Depth (cm)`", "
`Temperature (°C)`", "Sites_PF45"),
name_corrected = c("Elapsed time", "Layer", "Temperature", "Management"))
h <- broom::tidy(model_fit, conf.int = TRUE) |>
dplyr::filter(term != "(Intercept)") |>
left_join(term_rename, by = "term") |>
mutate(term_rename = fct_reorder(name_corrected, estimate)) |>
ggplot(aes(estimate, term_rename)) +
geom_vline(xintercept = 0, linetype = 2) +
geom_point() +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high), height = 0.1,
size=0.5) +
scale_x_continuous(breaks = c(-0.6, -0.4, -0.2, 0.0, 0.2),
labels = c("–0.6", "–0.4", "–0.2", "0.0", "0.2")) +
labs(x = "Coefficient", y = "") +
theme_light() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14)) # Time (d)
h
ggsave("figures/Linear-model-Co2_with_site.png", width = 8,
height = 2, dpi = 600)
broom::tidy(model_fit, conf.int = TRUE) |>
dplyr::filter(term != "(Intercept)") |>
left_join(term_rename, by = "term") |>
mutate(term_rename = fct_reorder(name_corrected, estimate))
options(repr.plot.width = 8, repr.plot.height = 2)
term_rename <- tibble(term = c("`Time (days)`", "`Depth (cm)`",
"`Temperature (°C)`", "Sites_PF45"),
name_corrected = c("Elapsed time", "Layer", "Temperature", "Management"))
h <- broom::tidy(model_fit, conf.int = TRUE) |>
dplyr::filter(term != "(Intercept)") |>
left_join(term_rename, by = "term") |>
mutate(term_rename = fct_reorder(name_corrected, estimate)) |>
ggplot(aes(estimate, term_rename)) +
geom_vline(xintercept = 0, linetype = 2) +
geom_point() +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high), height = 0.1,
size=0.5) +
scale_x_continuous(breaks = c(-0.6, -0.4, -0.2, 0.0, 0.2),
labels = c("–0.6", "–0.4", "–0.2", "0.0", "0.2")) +
labs(x = "Coefficient", y = "") +
theme_light() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14)) # Time (d)
h
ggsave("figures/Linear-model-Co2_with_site.png", width = 8,
height = 2, dpi = 600)
tidy(model_fit) |>
flextable()
tidy(model_fit)
tidy(model_fit) |>
flextable()
tidy(model_fit)
tidy(model_fit) |>
flextable()
?round
tidy(model_fit) |>
kableExtra::kable()
glance(model_fit)|>
kableExtra::kable()
rmse <-  data_co2_preprocessed |>
bind_cols(prediction) |>
rmse(`CO2 emission (ug/h/g)`, .pred)
rmse
rmse <-  round(as.numeric(rmse[1,3]), 2)
rmse
rmse <-  data_co2_preprocessed |>
bind_cols(prediction) |>
rmse(`CO2 emission (ug/h/g)`, .pred) |>
kableExtra::kable()
rmse
rmse <-  round(as.numeric(rmse[1,3]), 2)
rmse <-  data_co2_preprocessed |>
bind_cols(prediction) |>
rmse(`CO2 emission (ug/h/g)`, .pred)
rmse |>
kableExtra::kable()
rmse <-  round(as.numeric(rmse[1,3]), 2)
rsq <-  data_co2_preprocessed |>
bind_cols(prediction) |>
rsq(`CO2 emission (ug/h/g)`, .pred)
rsq |>
kableExtra::kable()
rsq <- round(as.numeric(rsq[1,3]), 2)
models_co2 <- data_co2 %>%
group_by(`Depth (cm)`) %>%
summarise(linmod = list(lm(lnK ~ `1/T`)))
models_co2 |>
kableExtra::kable()
models_co2 <- data_co2 %>%
group_by(`Depth (cm)`) %>%
summarise(linmod = list(lm(lnK ~ `1/T`)))
models_co2
linmod_coef <- list()
for (i in seq_along(models_co2$linmod)) linmod_coef[[i]] <- models_co2$linmod[[i]]$coefficients
linmod_coef <- do.call(rbind.data.frame, linmod_coef)
names(linmod_coef) <- c("Intercept", "Slope")
linmod_coef <- bind_cols(unique(data_co2["Depth (cm)"]), linmod_coef)
linmod_coef |>
kableExtra::kable()
R = 8.3144621 / 1000 # Gas constant Kj/mol/K
Activation_energy <-  Activation_energy %>%
mutate(Ea = -slope * R) %>%
select(Soil_layers, adj_r_sq, Ea)
R = 8.3144621 / 1000 # Gas constant Kj/mol/K
Activation_energy <-  Activation_energy %>%
mutate(Ea = -slope * R) %>%
select(Soil_layers, adj_r_sq, Ea)
Activation_energy <- tibble(
Soil_layers = c("10", "20", "30"),
intercept = NA,
slope = NA,
adj_r_sq = NA
)
lm_arrhenius <- for (i in 1:nrow(Activation_energy)) {
lm_Activation_energy <- data_co2_clean %>%
filter(`Depth (cm)` == Activation_energy$Soil_layers[i]) %>%
lm(lnK ~ `1/T`, data = .)
# intercept
Activation_energy$intercept[i] <- coef(lm_Activation_energy)[1]
# Slope
Activation_energy$slope[i] <- coef(lm_Activation_energy)[2]
# statistics
Activation_energy$adj_r_sq[i] <- summary(lm_Activation_energy)$adj.r.squared
}
R = 8.3144621 / 1000 # Gas constant Kj/mol/K
Activation_energy <-  Activation_energy %>%
mutate(Ea = -slope * R) %>%
select(Soil_layers, adj_r_sq, Ea)
Activation_energy
R = 8.3144621 / 1000 # Gas constant Kj/mol/K
Activation_energy <-  Activation_energy %>%
mutate(Ea = -slope * R) %>%
select(Soil_layers, adj_r_sq, Ea)
R = 8.3144621 / 1000 # Gas constant Kj/mol/K
Activation_energy <-  Activation_energy %>%
mutate(Ea = -slope * R) %>%
select(Soil_layers, adj_r_sq, Ea)
Activation_energy <- tibble(
Soil_layers = c("10", "20", "30"),
intercept = NA,
slope = NA,
adj_r_sq = NA
)
lm_arrhenius <- for (i in 1:nrow(Activation_energy)) {
lm_Activation_energy <- data_co2_clean %>%
filter(`Depth (cm)` == Activation_energy$Soil_layers[i]) %>%
lm(lnK ~ `1/T`, data = .)
# intercept
Activation_energy$intercept[i] <- coef(lm_Activation_energy)[1]
# Slope
Activation_energy$slope[i] <- coef(lm_Activation_energy)[2]
# statistics
Activation_energy$adj_r_sq[i] <- summary(lm_Activation_energy)$adj.r.squared
}
R = 8.3144621 / 1000 # Gas constant Kj/mol/K
Activation_energy <-  Activation_energy %>%
mutate(Ea = -slope * R) %>%
select(Soil_layers, adj_r_sq, Ea)
Activation_energy
Activation_energy |>
flextable()
K_median <- aggregate(K ~ `Sites` + `Time (days)` + `Depth (cm)` +
`Temperature (°C)`, data = data_co2_clean, FUN = median)
K_median <- K_median %>%
pivot_wider(names_from = `Temperature (°C)`, values_from = K)
K_median$Q_20_10 <- K_median$`20` / K_median$`10`
K_median$Q_30_20 <- K_median$`30` / K_median$`20`
K_median <- K_median %>%
na.omit(K_median)
data_Q10 <- gather(data = K_median, key = `Temperature range`,
value = Q10, c(`Q_20_10`, `Q_30_20`),
factor_key=TRUE)
stat_Q10 <- data_Q10 |>
group_by(`Depth (cm)`) |>
get_summary_stats(Q10)
stat_Q10 |>
kableExtra::kable()
mean_sd_CoverN <- data_carbon_credit |>
group_by(`Layer (cm)`) |>
summarize(mean_C_over_N = mean(`C:N ratio`, na.rm = TRUE),
se_C_over_N = sd(`C:N ratio`, na.rm = TRUE)/
sqrt(length(!is.na(`C:N ratio`))))
mean_sd_CoverN
data_carbon_credit |> get_summary_stats(`C stock (kg m-3)`)
data_carbon_credit |>
group_by(`Layer (cm)`) |>
get_summary_stats(`C stock (kg m-3)`)
data_carbon_credit |>
group_by(`Layer (cm)`) |>
get_summary_stats(`C:N ratio`) |>
kableExtra::kable()
Carbon_credit <- read_csv2('data/data_carbon_sublayer.csv')
Carbon_credit |>
kableExtra::kable()
rmse <-  data_co2_preprocessed |>
bind_cols(prediction) |>
rmse(`CO2 emission (ug/h/g)`, .pred)
rmse <-  round(as.numeric(rmse[1,3]), 2)
rmse |>
kableExtra::kable()
rmse <-  data_co2_preprocessed |>
bind_cols(prediction) |>
rmse(`CO2 emission (ug/h/g)`, .pred)
rmse |>
kableExtra::kable()
rmse <-  round(as.numeric(rmse[1,3]), 2)
K_median <- aggregate(K ~ `Sites` + `Time (days)` + `Depth (cm)` +
`Temperature (°C)`, data = data_co2_clean, FUN = median)
K_median <- K_median %>%
pivot_wider(names_from = `Temperature (°C)`, values_from = K)
K_median$Q_20_10 <- K_median$`20` / K_median$`10`
K_median$Q_30_20 <- K_median$`30` / K_median$`20`
K_median <- K_median %>%
na.omit(K_median)
data_Q10 <- gather(data = K_median, key = `Temperature range`,
value = Q10, c(`Q_20_10`, `Q_30_20`),
factor_key=TRUE)
stat_Q10 <- data_Q10 |>
group_by(`Depth (cm)`) |>
get_summary_stats(Q10) |>
kableExtra::kable()
stat_Q10 |>
kableExtra::kable()
K_median <- aggregate(K ~ `Sites` + `Time (days)` + `Depth (cm)` +
`Temperature (°C)`, data = data_co2_clean, FUN = median)
K_median <- K_median %>%
pivot_wider(names_from = `Temperature (°C)`, values_from = K)
K_median$Q_20_10 <- K_median$`20` / K_median$`10`
K_median$Q_30_20 <- K_median$`30` / K_median$`20`
K_median <- K_median %>%
na.omit(K_median)
data_Q10 <- gather(data = K_median, key = `Temperature range`,
value = Q10, c(`Q_20_10`, `Q_30_20`),
factor_key=TRUE)
stat_Q10 <- data_Q10 |>
group_by(`Depth (cm)`) |>
get_summary_stats(Q10)
stat_Q10 |>
kableExtra::kable()
